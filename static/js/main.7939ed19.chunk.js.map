{"version":3,"sources":["firebase/config.js","hooks/useFirestore.js","comps/ImageGrid.js","comps/Title.js","hooks/useStorage.js","comps/ProgressBar.js","comps/UploadForm.js","comps/Modal.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","projectStorage","storage","projectFirestore","firestore","timestamp","FieldValue","serverTimestamp","useFirestore","collection","useState","docs","setDocs","useEffect","unsub","orderBy","onSnapshot","snap","documents","forEach","doc","push","data","id","ImageGrid","setSelectedImg","console","log","className","map","div","key","layout","whileHover","opacity","onClick","url","img","src","alt","initial","animate","transition","delay","Title","useStorage","file","progress","setProgress","error","setError","setUrl","storageRef","ref","name","collectionReff","put","on","percentage","bytesTransferred","totalBytes","err","a","getDownloadURL","createdAt","add","ProgressBar","setFile","width","UploadForm","types","type","onChange","e","selected","target","files","includes","Modal","selectedImg","classList","contains","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7939ed19.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/storage'\r\nimport 'firebase/firestore'\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n  apiKey: 'AIzaSyD32C32DunzgnlaoLMZ2Xc8LbyYW0VNReg',\r\n  authDomain: 'bibidraws-727d7.firebaseapp.com',\r\n  projectId: 'bibidraws-727d7',\r\n  storageBucket: 'bibidraws-727d7.appspot.com',\r\n  messagingSenderId: '587765096365',\r\n  appId: '1:587765096365:web:a0571b1fd1a12d07c70b24',\r\n}\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig)\r\n\r\nconst projectStorage = firebase.storage()\r\nconst projectFirestore = firebase.firestore()\r\nconst timestamp = firebase.firestore.FieldValue.serverTimestamp\r\n\r\nexport { projectFirestore, projectStorage, timestamp }\r\n","import { useState, useEffect } from 'react'\r\nimport { projectFirestore } from '../firebase/config'\r\n\r\nconst useFirestore = (collection) => {\r\n  const [docs, setDocs] = useState([])\r\n\r\n  useEffect(() => {\r\n    const unsub = projectFirestore\r\n      .collection(collection)\r\n      .orderBy('createdAt', 'desc')\r\n      .onSnapshot((snap) => {\r\n        let documents = []\r\n        snap.forEach((doc) => {\r\n          documents.push({ ...doc.data(), id: doc.id })\r\n        })\r\n        setDocs(documents)\r\n      })\r\n\r\n    return () => unsub()\r\n    // this is a cleanup function that react will run when\r\n    // a component using the hook unmounts\r\n  }, [collection])\r\n\r\n  return { docs }\r\n}\r\n\r\nexport default useFirestore\r\n","import React from 'react'\r\nimport useFirestore from '../hooks/useFirestore'\r\nimport { motion } from 'framer-motion'\r\n\r\nconst ImageGrid = ({ setSelectedImg }) => {\r\n  const { docs } = useFirestore('images')\r\n  console.log(docs)\r\n\r\n  return (\r\n    <div className='img-grid'>\r\n      {docs &&\r\n        docs.map((doc) => (\r\n          <motion.div\r\n            className='img-wrap'\r\n            key={doc.id}\r\n            layout\r\n            whileHover={{ opacity: 1 }}\r\n            onClick={() => setSelectedImg(doc.url)}\r\n          >\r\n            <motion.img\r\n              src={doc.url}\r\n              alt='img'\r\n              initial={{ opacity: 0 }}\r\n              animate={{ opacity: 1 }}\r\n              transition={{ delay: 1 }}\r\n            />\r\n          </motion.div>\r\n        ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ImageGrid\r\n","import React from 'react'\n\nconst Title = () => {\n  return (\n    <div className='title'>\n      <h1>BibiDraws</h1>\n      <h2>One Corner Everyday</h2>\n    </div>\n  )\n}\n\nexport default Title\n","import { useState, useEffect } from 'react'\r\nimport { projectStorage, projectFirestore, timestamp } from '../firebase/config'\r\n\r\nconst useStorage = (file) => {\r\n  const [progress, setProgress] = useState(0)\r\n  const [error, setError] = useState(null)\r\n  const [url, setUrl] = useState(null)\r\n\r\n  useEffect(() => {\r\n    // references\r\n    const storageRef = projectStorage.ref(file.name)\r\n    const collectionReff = projectFirestore.collection('images')\r\n\r\n    storageRef.put(file).on(\r\n      'state_changed',\r\n      (snap) => {\r\n        let percentage = (snap.bytesTransferred / snap.totalBytes) * 100\r\n        setProgress(percentage)\r\n      },\r\n      (err) => {\r\n        setError(err)\r\n      },\r\n      async () => {\r\n        const url = await storageRef.getDownloadURL()\r\n        const createdAt = timestamp()\r\n        collectionReff.add({ url, createdAt })\r\n        setUrl(url)\r\n      }\r\n    )\r\n  }, [file])\r\n\r\n  return { progress, url, error }\r\n}\r\n\r\nexport default useStorage\r\n","import React, { useEffect } from 'react'\r\nimport useStorage from '../hooks/useStorage'\r\nimport { motion } from 'framer-motion'\r\n\r\nconst ProgressBar = ({ file, setFile }) => {\r\n  const { url, progress } = useStorage(file)\r\n\r\n  useEffect(() => {\r\n    if (url) {\r\n      setFile(null)\r\n    }\r\n  }, [url, setFile])\r\n\r\n  return (\r\n    <motion.div\r\n      className='progress-bar'\r\n      initial={{ width: 0 }}\r\n      animate={{ width: progress + '%' }}\r\n    ></motion.div>\r\n  )\r\n}\r\n\r\nexport default ProgressBar\r\n","import React, { useState } from 'react'\r\nimport ProgressBar from './ProgressBar'\r\n\r\nconst UploadForm = () => {\r\n  const [file, setFile] = useState(null)\r\n  const [error, setError] = useState(null)\r\n\r\n  const types = ['image/png', 'image/jpeg']\r\n\r\n  const changeHandler = (e) => {\r\n    let selected = e.target.files[0]\r\n    if (selected && types.includes(selected.type)) {\r\n      setFile(selected)\r\n      setError('')\r\n    } else {\r\n      setFile(null)\r\n      setError('Please select an image file (.png or .jpeg)')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form>\r\n      <label>\r\n        <input type='file' onChange={changeHandler} />\r\n        <span>+</span>\r\n      </label>\r\n      <div className='output'>\r\n        {error && <div className='error'> {error}</div>}\r\n        {file && <div>{file.name}</div>}\r\n        {file && <ProgressBar file={file} setFile={setFile} />}\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default UploadForm\r\n","import React from 'react'\r\nimport { motion } from 'framer-motion'\r\n\r\nconst Modal = ({ selectedImg, setSelectedImg }) => {\r\n  const handleClick = (e) => {\r\n    if (e.target.classList.contains('backdrop')) {\r\n      setSelectedImg(null)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <motion.div\r\n      className='backdrop'\r\n      onClick={handleClick}\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1 }}\r\n    >\r\n      <img src={selectedImg} alt='enlarged pic' />\r\n    </motion.div>\r\n  )\r\n}\r\n\r\nexport default Modal\r\n","import React, { useState } from 'react'\nimport ImageGrid from './comps/ImageGrid'\nimport Title from './comps/Title'\nimport UploadForm from './comps/UploadForm'\nimport Modal from './comps/Modal'\n\nfunction App() {\n  const [selectedImg, setSelectedImg] = useState(null)\n\n  return (\n    <div className='App'>\n      <Title />\n      <UploadForm />\n      <ImageGrid setSelectedImg={setSelectedImg} />\n      {selectedImg && (\n        <Modal selectedImg={selectedImg} setSelectedImg={setSelectedImg} />\n      )}\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}